#include "wordshowwidget.h"
#include "wtool.h"
#include <QDebug>
#include <QThread>
#include <QCoreApplication>
#include <QScrollBar>

WordShowWidget::WordShowWidget(QWidget *parent) : QWidget(parent)
{
    widget_topBar = new QWidget(this);
    widget_topBar->setObjectName("widget_topBar");
    widget_show = new QWidget(this);
    widget_show->setObjectName("widget_show");

    btn_return = new QPushButton(widget_topBar);
    btn_return->setObjectName("btn_return");
    btn_return->setToolTip("Return");
    connect(btn_return, SIGNAL(clicked(bool)), this, SLOT(slot_btnReturn_Clicked(bool)));
    btn_delete = new QPushButton(widget_topBar);
    btn_delete->setObjectName("btn_delete");
    btn_delete->setToolTip("Delete");
    connect(btn_delete, SIGNAL(clicked(bool)), this, SLOT(slot_btnDelete_Clicked(bool)));
    btn_edit = new QPushButton(widget_topBar);
    btn_edit->setObjectName("btn_edit");
    btn_edit->setToolTip("Edit");
    connect(btn_edit, SIGNAL(clicked(bool)), this, SLOT(slot_btnEdit_Clicked(bool)));
    btn_reset = new QPushButton(widget_topBar);
    btn_reset->setObjectName("btn_reset");
    btn_reset->setToolTip("Reset memory times");
    connect(btn_reset, SIGNAL(clicked(bool)), this, SLOT(slot_btnReset_Clicked(bool)));

    wbtn_remember = new WTButton(widget_topBar);
    wbtn_remember->setObjectName("wbtn_remember");
    wbtn_remember->setText("                ");//为了使按钮能被按到
    connect(wbtn_remember, SIGNAL(clicked(bool)), this, SLOT(slot_wbtnRemember_Clicked(bool)));
    wbtn_showChinese = new WTButton(widget_topBar);
    wbtn_showChinese->setObjectName("wbtn_showChinese");
    wbtn_showChinese->setText("                ");
    connect(wbtn_showChinese, SIGNAL(clicked(bool)), this, SLOT(slot_wbtnShowChinese_Clicked(bool)));

    scrollArea = new QScrollArea(this);
    scrollArea->setObjectName("scrollArea");
    scrollArea->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);
    scrollArea->setWidget(widget_show);

    //CopyLabel
    copyLabel_word = new CopyLabel(widget_show);
    copyLabel_word->setObjectName("copyLabel_word");
    copyLabel_phoneticSymbol = new CopyLabel(widget_show);
    copyLabel_phoneticSymbol->setObjectName("copyLabel_phoneticSymbol");
    copyLabel_phoneticSymbol->hide();
    copyLabel_times = new CopyLabel(widget_show);
    copyLabel_times->setObjectName("copyLabel_times");

    for (int i = 0; i < 20; i++)
    {
        copyLabel_property[i] = new CopyLabel(widget_show);
        copyLabel_property[i]->setObjectName(QString("copyLabel_property%1").arg(i + 1));
        copyLabel_property[i]->hide();
    }
    for (int i = 0; i < 20; i++)
    {
        copyLabel_explain[i] = new CopyLabel(widget_show);
        copyLabel_explain[i]->setObjectName(QString("copyLabel_explain%1").arg(i + 1));
        copyLabel_explain[i]->hide();
    }

    copyLabel_exampleSentence = new CopyLabel(widget_show);
    copyLabel_exampleSentence->setObjectName("copyLabel_exampleSentence");
    copyLabel_exampleSentence->hide();
    for (int i = 0; i < 6; i++)
    {
        copyLabel_example[i] = new CopyLabel(widget_show);
        copyLabel_example[i]->setObjectName(QString("copyLabel_example%1").arg(i + 1));
        copyLabel_example[i]->hide();
    }

    copyLabel_synonym = new CopyLabel(widget_show);
    copyLabel_synonym->setObjectName("copyLabel_synonym");
    copyLabel_synonym->hide();
    copyLabel_antonym = new CopyLabel(widget_show);
    copyLabel_antonym->setObjectName("copyLabel_antonym");
    copyLabel_antonym->hide();

    //LinkLabel
    for (int i = 0; i < 8; i++)
    {
        linkLabel_synonym[i] = new LinkLabel(widget_show);
        linkLabel_synonym[i]->setObjectName(QString("linkLabel_synonym%1").arg(i + 1));
        connect(linkLabel_synonym[i], SIGNAL(released()), this, SLOT(slot_wordLinkPressed()));
        linkLabel_synonym[i]->hide();
    }
    for (int i = 0; i < 8; i++)
    {
        linkLabel_antonym[i] = new LinkLabel(widget_show);
        linkLabel_antonym[i]->setObjectName(QString("linkLabel_antonym%1").arg(i + 1));
        connect(linkLabel_antonym[i], SIGNAL(released()), this, SLOT(slot_wordLinkPressed()));
        linkLabel_antonym[i]->hide();
    }


    loadStyleSheet();
}

void WordShowWidget::showEvent(QShowEvent *)
{
//    WTool::initDB();
    qDebug() << "showEvent";
//    setWordInfo(NULL);
//    setViewPosition();

}

void WordShowWidget::recoveryInterface()
{
    scrollArea->verticalScrollBar()->setValue(0);
    copyLabel_word->clear();
    copyLabel_phoneticSymbol->clear();
    copyLabel_phoneticSymbol->hide();
    copyLabel_times->clear();
    for (int i = 0; i < 20; i++)
    {
        copyLabel_property[i]->clear();
        copyLabel_property[i]->hide();
        copyLabel_explain[i]->clear();
        copyLabel_explain[i]->hide();
    }
    copyLabel_exampleSentence->clear();
    copyLabel_exampleSentence->hide();
    for (int i = 0; i < 6; i++)
    {
        copyLabel_example[i]->clear();
        copyLabel_example[i]->hide();
    }
    copyLabel_synonym->clear();
    copyLabel_synonym->hide();
    copyLabel_antonym->clear();
    copyLabel_antonym->hide();
    for (int i = 0; i < 8; i++)
    {
        linkLabel_synonym[i]->clear();
        linkLabel_synonym[i]->hide();
        linkLabel_antonym[i]->clear();
        linkLabel_antonym[i]->hide();
    }
}

void WordShowWidget::loadWordInfo(QString name)
{
    setWordInfo(WordInfo());
    setViewPosition();
}

void WordShowWidget::loadStyleSheet()
{
    setStyleSheet(WTool::getWordShowWidgetQss());
}

void WordShowWidget::setWordInfo(WordInfo word)
{
    Q_UNUSED(word);

    copyLabel_word->setText("environment");
    copyLabel_phoneticSymbol->setText("[ɪnˈvaɪrənmənt]");
    copyLabel_phoneticSymbol->show();
    copyLabel_times->setText("T:10");

    copyLabel_property[0]->setText("n.");
    copyLabel_property[0]->show();
    copyLabel_explain[0]->setText("环境，外界; 周围，围绕; 工作平台; （运行）环境;");
    copyLabel_explain[0]->show();
    copyLabel_property[1]->setText("n.");
    copyLabel_property[1]->show();
    copyLabel_explain[1]->setText("Someone's environment is all the circumstances, people, things, and events around them that influence their life.");
    copyLabel_explain[1]->show();
    copyLabel_property[2]->setText("变形");
    copyLabel_property[2]->show();
    copyLabel_explain[2]->setText("复数: environments");
    copyLabel_explain[2]->show();

    copyLabel_exampleSentence->setText("例句：");
    copyLabel_exampleSentence->show();
    copyLabel_example[0]->setText("1. Outside the protected environment of institutional care he could not survive.");
    copyLabel_example[0]->show();
    copyLabel_example[1]->setText("2. His independence had been forged on the anvil of a harsh environment.");
    copyLabel_example[1]->show();
    copyLabel_example[2]->setText("3. The plans will be examined by EU environment ministers.");
    copyLabel_example[2]->show();
    copyLabel_example[3]->setText("4. I have no doubt that we are polluting the environment beyond redemption.");
    copyLabel_example[3]->show();
    copyLabel_example[4]->setText("5. There is little assessment of the damage to the natural environment.");
    copyLabel_example[4]->show();
    copyLabel_example[5]->setText("6. Is the recycling process in itself damaging to the environment?");
    copyLabel_example[5]->show();

    copyLabel_synonym->setText("同义词：");
    copyLabel_synonym->show();
    linkLabel_synonym[0]->setText("impose");
    linkLabel_synonym[0]->show();
    linkLabel_synonym[1]->setText("impose");
    linkLabel_synonym[1]->show();
    linkLabel_synonym[2]->setText("impose");
    linkLabel_synonym[2]->show();
    linkLabel_synonym[3]->setText("impose");
    linkLabel_synonym[3]->show();
    linkLabel_synonym[4]->setText("impose");
    linkLabel_synonym[4]->show();
    linkLabel_synonym[5]->setText("impose");
    linkLabel_synonym[5]->show();
    linkLabel_synonym[6]->setText("impose");
    linkLabel_synonym[6]->show();
    linkLabel_synonym[7]->setText("impose");
    linkLabel_synonym[7]->show();

    copyLabel_antonym->setText("反义词：");
    copyLabel_antonym->show();
    linkLabel_antonym[0]->setText("deposit");
    linkLabel_antonym[0]->show();
    linkLabel_antonym[1]->setText("deposit");
    linkLabel_antonym[1]->show();
    linkLabel_antonym[2]->setText("deposit");
    linkLabel_antonym[2]->show();
    linkLabel_antonym[3]->setText("deposit");
    linkLabel_antonym[3]->show();
    linkLabel_antonym[4]->setText("deposit");
    linkLabel_antonym[4]->show();
    linkLabel_antonym[5]->setText("deposit");
    linkLabel_antonym[5]->show();
    linkLabel_antonym[6]->setText("deposit");
    linkLabel_antonym[6]->show();
    linkLabel_antonym[7]->setText("deposit");
}

void WordShowWidget::setViewPosition()
{
    QString screen = WTool::getScreenSize();
    if (screen == "14")
        setViewPosition_14();
    else if (screen == "15.6")
        setViewPosition_15();
}

void WordShowWidget::setViewPosition_14()// 643 635
{
    int x = 8, y = 8, h = 47;
    int len = WTool::getFontLength(copyLabel_word->font(), copyLabel_word->text()) + 8;
    copyLabel_word->setGeometry(x, y, len, h);

    len = WTool::getFontLength(copyLabel_phoneticSymbol->font(), copyLabel_phoneticSymbol->text()) + 8;
    x = copyLabel_word->x() + copyLabel_word->width() + 16;
    y += 4, h = 39;
    copyLabel_phoneticSymbol->setGeometry(x, y, len, h);
    copyLabel_phoneticSymbol->show();

    len = WTool::getFontLength(copyLabel_times->font(), copyLabel_times->text()) + 8;
    x = 635 - len;
    copyLabel_times->setGeometry(x, y, len, h);

    int i = -1, j = -1;
    for (int k = 0; k < 3; k++)
    {
        x = 8, y += h + 16, len = 80, h = 39;
        copyLabel_property[++i]->setGeometry(x, y, len, h);
        copyLabel_property[i]->setAlignment(Qt::AlignCenter);
        copyLabel_property[i]->show();
        j++;
        len = WTool::getFontLength(copyLabel_explain[j]->font(), copyLabel_explain[j]->text()) + 8;
        x += copyLabel_property[i]->width() + 4;
        if (x + len + 8 > 635)
        {
            len = 635 - x;
            int num = WTool::getTextLineNumber(copyLabel_explain[j]->font(),
                copyLabel_explain[j]->text(), 635 - x - 8);
            h = 39 + 26 * (num - 1);
        }
        copyLabel_explain[j]->setGeometry(x, y, len, h);
        copyLabel_explain[j]->show();
    }

    x = 8, y += h + 16;
    len = WTool::getFontLength(copyLabel_exampleSentence->font(), copyLabel_exampleSentence->text()) + 8;
    h = 39;
    copyLabel_exampleSentence->setGeometry(x, y, len, h);
    copyLabel_exampleSentence->show();
    for (i = 0; i < 6; i++)
    {
        x = 8, y += h + 16, h = 39;
        len = WTool::getFontLength(copyLabel_example[i]->font(), copyLabel_example[i]->text()) + 8;
        if (x + len + 8 > 635)
        {
            len = 635 - x;
            int num = WTool::getTextLineNumber(copyLabel_example[i]->font(),
                copyLabel_example[i]->text(), 635 - x - 8);
            h = 39 + 26 * (num - 1);
        }
        copyLabel_example[i]->setGeometry(x, y, len, h);
        copyLabel_example[i]->show();
    }

    x = 8, y += h + 16, h = 39;
    len = WTool::getFontLength(copyLabel_synonym->font(), copyLabel_synonym->text()) + 8;
    copyLabel_synonym->setGeometry(x, y, len, h);
    copyLabel_synonym->show();
    x = 8, y += h + 8, h = 39;
    for (i = 0; i < 8; i++)
    {
        len = WTool::getFontLength(linkLabel_synonym[i]->font(), linkLabel_synonym[i]->text()) + 4;
        if (x + len > 635)
        {
            x = 8, y += h + 8;
        }
        linkLabel_synonym[i]->setGeometry(x, y, len, h);
        linkLabel_synonym[i]->show();
        x += len + 16;
    }

    x = 8, y += h + 16, h = 39;
    len = WTool::getFontLength(copyLabel_antonym->font(), copyLabel_antonym->text()) + 8;
    copyLabel_antonym->setGeometry(x, y, len, h);
    copyLabel_antonym->show();
    x = 8, y += h + 8, h = 39;
    for (i = 0; i < 8; i++)
    {
        len = WTool::getFontLength(linkLabel_antonym[i]->font(), linkLabel_antonym[i]->text()) + 4;
        if (x + len > 635)
        {
            x = 8, y += h + 8;
        }
        linkLabel_antonym[i]->setGeometry(x, y, len, h);
        linkLabel_antonym[i]->show();
        x += len + 16;
    }

    y += h + 8;
    widget_show->setGeometry(0, 0, 660, y);
}

void WordShowWidget::setViewPosition_15()
{
    int x = 10, y = 10, h = 55;
    int len = WTool::getFontLength(copyLabel_word->font(), copyLabel_word->text()) + 8;
    copyLabel_word->setGeometry(x, y, len, h);

    len = WTool::getFontLength(copyLabel_phoneticSymbol->font(), copyLabel_phoneticSymbol->text()) + 8;
    x = copyLabel_word->x() + copyLabel_word->width() + 20;
    y += 5, h = 44;
    copyLabel_phoneticSymbol->setGeometry(x, y, len, h);
    copyLabel_phoneticSymbol->show();

    len = WTool::getFontLength(copyLabel_times->font(), copyLabel_times->text()) + 8;
    x = 790 - len;
    copyLabel_times->setGeometry(x, y, len, h);

    int i = -1, j = -1;
    for (int k = 0; k < 3; k++)
    {
        x = 10, y += h + 20, len = 100, h = 44;
        copyLabel_property[++i]->setGeometry(x, y, len, h);
        copyLabel_property[i]->setAlignment(Qt::AlignCenter);
        copyLabel_property[i]->show();
        j++;
        len = WTool::getFontLength(copyLabel_explain[j]->font(), copyLabel_explain[j]->text()) + 8;
        x += copyLabel_property[i]->width() + 5;
        if (x + len + 10 > 790)
        {
            len = 790 - x;
            int num = WTool::getTextLineNumber(copyLabel_explain[j]->font(),
                copyLabel_explain[j]->text(), 790 - x - 10);
            h = 44 + 30 * (num - 1);
        }
        copyLabel_explain[j]->setGeometry(x, y, len, h);
        copyLabel_explain[j]->show();
    }

    x = 10, y += h + 20;
    len = WTool::getFontLength(copyLabel_exampleSentence->font(), copyLabel_exampleSentence->text()) + 8;
    h = 44;
    copyLabel_exampleSentence->setGeometry(x, y, len, h);
    copyLabel_exampleSentence->show();
    for (i = 0; i < 6; i++)
    {
        x = 10, y += h + 20, h = 44;
        len = WTool::getFontLength(copyLabel_example[i]->font(), copyLabel_example[i]->text()) + 8;
        if (x + len + 10 > 790)
        {
            len = 790 - x;
            int num = WTool::getTextLineNumber(copyLabel_example[i]->font(),
                copyLabel_example[i]->text(), 790 - x - 10);
            h = 44 + 30 * (num - 1);
        }
        copyLabel_example[i]->setGeometry(x, y, len, h);
        copyLabel_example[i]->show();
    }

    x = 10, y += h + 20, h = 44;
    len = WTool::getFontLength(copyLabel_synonym->font(), copyLabel_synonym->text()) + 8;
    copyLabel_synonym->setGeometry(x, y, len, h);
    copyLabel_synonym->show();
    x = 10, y += h + 10, h = 44;
    for (i = 0; i < 8; i++)
    {
        len = WTool::getFontLength(linkLabel_synonym[i]->font(), linkLabel_synonym[i]->text()) + 5;
        if (x + len > 790)
        {
            x = 10, y += h + 10;
        }
        linkLabel_synonym[i]->setGeometry(x, y, len, h);
        linkLabel_synonym[i]->show();
        x += len + 20;
    }

    x = 10, y += h + 20, h = 44;
    len = WTool::getFontLength(copyLabel_antonym->font(), copyLabel_antonym->text()) + 8;
    copyLabel_antonym->setGeometry(x, y, len, h);
    copyLabel_antonym->show();
    x = 10, y += h + 10, h = 44;
    for (i = 0; i < 8; i++)
    {
        len = WTool::getFontLength(linkLabel_antonym[i]->font(), linkLabel_antonym[i]->text()) + 5;
        if (x + len > 790)
        {
            x = 10, y += h + 10;
        }
        linkLabel_antonym[i]->setGeometry(x, y, len, h);
        linkLabel_antonym[i]->show();
        x += len + 20;
    }

    y += h + 10;
    widget_show->setGeometry(0, 0, 820, y);
}

void WordShowWidget::slot_btnReturn_Clicked(bool)
{

}

void WordShowWidget::slot_btnDelete_Clicked(bool)
{

}

void WordShowWidget::slot_btnEdit_Clicked(bool)
{

}

void WordShowWidget::slot_btnReset_Clicked(bool)
{

}

void WordShowWidget::slot_wbtnRemember_Clicked(bool)
{
    qDebug() << "slot_wbtnRemember_Clicked";
}

void WordShowWidget::slot_wbtnShowChinese_Clicked(bool)
{
    qDebug() << "slot_wbtnShowChinese_Clicked";
}

void WordShowWidget::slot_wordLinkPressed()
{
//    qDebug() << sender()->objectName() << " pressed";
}
